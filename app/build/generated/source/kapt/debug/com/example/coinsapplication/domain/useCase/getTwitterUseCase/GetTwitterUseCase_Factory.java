// Generated by Dagger (https://dagger.dev).
package com.example.coinsapplication.domain.useCase.getTwitterUseCase;

import com.example.coinsapplication.domain.repository.CoinRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetTwitterUseCase_Factory implements Factory<GetTwitterUseCase> {
  private final Provider<CoinRepository> repositoryProvider;

  public GetTwitterUseCase_Factory(Provider<CoinRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetTwitterUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetTwitterUseCase_Factory create(Provider<CoinRepository> repositoryProvider) {
    return new GetTwitterUseCase_Factory(repositoryProvider);
  }

  public static GetTwitterUseCase newInstance(CoinRepository repository) {
    return new GetTwitterUseCase(repository);
  }
}
