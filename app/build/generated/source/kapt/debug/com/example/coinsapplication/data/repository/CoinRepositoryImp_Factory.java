// Generated by Dagger (https://dagger.dev).
package com.example.coinsapplication.data.repository;

import com.example.coinsapplication.data.CoinApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CoinRepositoryImp_Factory implements Factory<CoinRepositoryImp> {
  private final Provider<CoinApi> coinApiProvider;

  public CoinRepositoryImp_Factory(Provider<CoinApi> coinApiProvider) {
    this.coinApiProvider = coinApiProvider;
  }

  @Override
  public CoinRepositoryImp get() {
    return newInstance(coinApiProvider.get());
  }

  public static CoinRepositoryImp_Factory create(Provider<CoinApi> coinApiProvider) {
    return new CoinRepositoryImp_Factory(coinApiProvider);
  }

  public static CoinRepositoryImp newInstance(CoinApi coinApi) {
    return new CoinRepositoryImp(coinApi);
  }
}
